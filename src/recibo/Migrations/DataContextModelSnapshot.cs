// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using recibo.Data;

namespace recibo.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("recibo.Models.Recibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DocumentoEmissor")
                        .HasColumnType("longtext");

                    b.Property<string>("DocumentoPagador")
                        .HasColumnType("longtext");

                    b.Property<string>("FormaPagamento")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeEmissor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomePagador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoneEmissor")
                        .HasColumnType("longtext");

                    b.Property<string>("cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("referente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Recibos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentoEmissor = "12345678912",
                            DocumentoPagador = "21987654321",
                            FormaPagamento = "Dinheiro",
                            NomeEmissor = "Marcia Amaral",
                            NomePagador = "Cliente Teste 1",
                            TelefoneEmissor = "32991411071",
                            cidade = "Mirai",
                            data = "01102020",
                            referente = "Pagamento para teste",
                            valor = 300.00m
                        },
                        new
                        {
                            Id = 2,
                            DocumentoEmissor = "12345678912",
                            DocumentoPagador = "21987654321",
                            FormaPagamento = "Cartao",
                            NomeEmissor = "Marcia Amaral",
                            NomePagador = "Cliente Teste 2",
                            TelefoneEmissor = "32991411071",
                            cidade = "Mirai",
                            data = "02102020",
                            referente = "Pagamento para teste Novo",
                            valor = 300.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
